name: Cypress E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM UTC

env:
  CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
  NODE_VERSION: '18'

jobs:
  # Job 1: Install dependencies and build
  install-and-build:
    runs-on: ubuntu-latest
    outputs:
      cypress-version: ${{ steps.cypress-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Get Cypress version
        id: cypress-version
        run: echo "version=$(npx cypress --version | grep 'Cypress package version' | cut -d' ' -f4)" >> $GITHUB_OUTPUT

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ steps.cypress-version.outputs.version }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: build
          key: build-${{ runner.os }}-${{ github.sha }}

  # Job 2: Lint and type check
  lint-and-typecheck:
    runs-on: ubuntu-latest
    needs: install-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Run ESLint
        run: npm run lint || true

      - name: Run type checking
        run: npm run typecheck || true

  # Job 3-8: Parallel E2E tests (6 jobs for different test suites)
  cypress-auth-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Authentication Tests
        run: npm run test:e2e:auth
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-auth-${{ matrix.browser }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-auth-${{ matrix.browser }}
          path: cypress/videos

  cypress-articles-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec: 
          - "cypress/e2e/articles/article-crud.cy.js"
          - "cypress/e2e/articles/article-favoriting.cy.js"
          - "cypress/e2e/articles/article-comments.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Articles Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-articles-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-articles-${{ strategy.job-index }}
          path: cypress/videos

  cypress-social-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec:
          - "cypress/e2e/social/user-following.cy.js"
          - "cypress/e2e/social/user-profile.cy.js"
          - "cypress/e2e/social/feed-filtering.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Social Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-social-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-social-${{ strategy.job-index }}
          path: cypress/videos

  cypress-navigation-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec:
          - "cypress/e2e/navigation/routing.cy.js"
          - "cypress/e2e/navigation/menu-navigation.cy.js"
          - "cypress/e2e/navigation/deep-linking.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Navigation Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-navigation-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-navigation-${{ strategy.job-index }}
          path: cypress/videos

  cypress-forms-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec:
          - "cypress/e2e/forms/form-validation.cy.js"
          - "cypress/e2e/forms/editor-form.cy.js"
          - "cypress/e2e/forms/settings-form.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Forms Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-forms-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-forms-${{ strategy.job-index }}
          path: cypress/videos

  cypress-api-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec:
          - "cypress/e2e/api/api-integration.cy.js"
          - "cypress/e2e/api/error-handling.cy.js"
          - "cypress/e2e/api/authentication-api.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run API Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-api-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-api-${{ strategy.job-index }}
          path: cypress/videos

  cypress-ui-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    strategy:
      matrix:
        spec:
          - "cypress/e2e/ui/responsive-design.cy.js"
          - "cypress/e2e/ui/accessibility.cy.js"
          - "cypress/e2e/ui/visual-regression.cy.js"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run UI Tests
        run: npm run cypress:run:spec -- "${{ matrix.spec }}"
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-ui-${{ strategy.job-index }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-ui-${{ strategy.job-index }}
          path: cypress/videos

  # Job 9: Smoke tests (critical path)
  cypress-smoke-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Smoke Tests
        run: npm run test:e2e:smoke
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-smoke
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-smoke
          path: cypress/videos

  # Job 10: Component tests
  cypress-component-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Component Tests
        run: npm run test:component
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-component
          path: cypress/screenshots

  # Job 11: Performance tests
  cypress-performance-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Performance Tests
        run: npm run cypress:run -- --env grep=@performance
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-performance-results
          path: cypress/reports

  # Job 12: Security tests
  cypress-security-tests:
    runs-on: ubuntu-latest
    needs: install-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Security Tests
        run: npm run cypress:run -- --env grep=@security
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload security results
        uses: actions/upload-artifact@v3
        with:
          name: cypress-security-results
          path: cypress/reports

  # Job 13: Cross-browser tests (sequential due to resource constraints)
  cypress-cross-browser-tests:
    runs-on: ubuntu-latest
    needs: [cypress-smoke-tests] # Wait for smoke tests to pass first
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        include:
          - browser: chrome
            browser-version: stable
          - browser: firefox
            browser-version: stable
          - browser: edge
            browser-version: stable
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.cache/Cypress
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            cypress-${{ runner.os }}-${{ needs.install-and-build.outputs.cypress-version }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Install Cypress
        run: npx cypress install

      - name: Run Cross-Browser Tests
        run: npm run cypress:run:${{ matrix.browser }} -- --env grep=@cross-browser
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browser }}
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos-${{ matrix.browser }}
          path: cypress/videos

  # Job 14: Generate and merge reports
  generate-reports:
    runs-on: ubuntu-latest
    needs: [
      cypress-auth-tests,
      cypress-articles-tests,
      cypress-social-tests,
      cypress-navigation-tests,
      cypress-forms-tests,
      cypress-api-tests,
      cypress-ui-tests,
      cypress-smoke-tests,
      cypress-component-tests,
      cypress-performance-tests,
      cypress-security-tests
    ]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: cypress/reports/artifacts

      - name: Merge test reports
        run: |
          npx mochawesome-merge cypress/reports/artifacts/**/*.json > cypress/reports/merged-report.json
          npx marge cypress/reports/merged-report.json --reportDir cypress/reports --inline

      - name: Upload merged report
        uses: actions/upload-artifact@v3
        with:
          name: cypress-merged-report
          path: cypress/reports

      - name: Generate test summary
        run: |
          echo "# Test Results Summary" > test-summary.md
          echo "## Build: ${{ github.sha }}" >> test-summary.md
          echo "## Date: $(date)" >> test-summary.md
          echo "" >> test-summary.md
          echo "### Test Execution Details:" >> test-summary.md
          echo "- Authentication Tests: ${{ needs.cypress-auth-tests.result }}" >> test-summary.md
          echo "- Articles Tests: ${{ needs.cypress-articles-tests.result }}" >> test-summary.md
          echo "- Social Tests: ${{ needs.cypress-social-tests.result }}" >> test-summary.md
          echo "- Navigation Tests: ${{ needs.cypress-navigation-tests.result }}" >> test-summary.md
          echo "- Forms Tests: ${{ needs.cypress-forms-tests.result }}" >> test-summary.md
          echo "- API Tests: ${{ needs.cypress-api-tests.result }}" >> test-summary.md
          echo "- UI Tests: ${{ needs.cypress-ui-tests.result }}" >> test-summary.md
          echo "- Smoke Tests: ${{ needs.cypress-smoke-tests.result }}" >> test-summary.md
          echo "- Component Tests: ${{ needs.cypress-component-tests.result }}" >> test-summary.md
          echo "- Performance Tests: ${{ needs.cypress-performance-tests.result }}" >> test-summary.md
          echo "- Security Tests: ${{ needs.cypress-security-tests.result }}" >> test-summary.md

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary.md

  # Job 15: Deployment (only on main branch after all tests pass)
  deploy:
    runs-on: ubuntu-latest
    needs: [generate-reports, cypress-cross-browser-tests]
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            build
          key: |
            node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
            build-${{ runner.os }}-${{ github.sha }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: react-redux-realworld-example.github.io

      - name: Deploy test reports
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./cypress/reports
          destination_dir: test-reports
          keep_files: true

  # Job 16: Notification (sequential, runs after all jobs)
  notify:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    steps:
      - name: Notify on success
        if: success()
        run: |
          echo "🎉 All tests passed! Deployment successful."
          # Add notification logic here (Slack, Discord, etc.)

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Tests failed or deployment failed."
          # Add notification logic here (Slack, Discord, etc.)

# Concurrency control to avoid running multiple workflows simultaneously
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true